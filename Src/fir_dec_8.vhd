-- -------------------------------------------------------------
--
-- Module: fir_dec_8
-- Generated by MATLAB(R) 23.2 and Filter Design HDL Coder 23.2.
-- Generated on: 2024-05-02 13:49:09
-- -------------------------------------------------------------

-- -------------------------------------------------------------
-- HDL Code Generation Options:
--
-- TargetLanguage: VHDL
-- ClockInputPort: clk_i
-- ResetInputPort: nrst
-- InputPort: D_in
-- OutputPort: D_out
-- Name: fir_dec_8
-- ResetAssertedLevel: Active-low
-- TestBenchStimulus: impulse step ramp chirp noise 

-- -------------------------------------------------------------
-- HDL Implementation    : Fully parallel
-- -------------------------------------------------------------
-- Filter Settings:
--
-- Discrete-Time FIR Filter (real)
-- -------------------------------
-- Filter Structure  : Direct-Form FIR Transposed
-- Filter Length     : 61
-- Stable            : Yes
-- Linear Phase      : Yes (Type 1)
-- Arithmetic        : fixed
-- Numerator         : s16,10 -> [-32 32)
-- Input             : s16,0 -> [-32768 32768)
-- Filter Internals  : Full Precision
--   Output          : s27,10 -> [-65536 65536)  (auto determined)
--   States          : s27,10 -> [-65536 65536)  (auto determined)
--   Product         : s24,10 -> [-8192 8192)  (auto determined)
--   Accumulator     : s27,10 -> [-65536 65536)  (auto determined)
--   Round Mode      : No rounding
--   Overflow Mode   : No overflow
-- -------------------------------------------------------------



LIBRARY IEEE;
USE IEEE.std_logic_1164.all;
USE IEEE.numeric_std.ALL;

ENTITY fir_dec_8 IS
   PORT( clk_i                           :   IN    std_logic; 
         clk_enable                      :   IN    std_logic; 
         nrst                            :   IN    std_logic; 
         D_in                            :   IN    std_logic_vector(15 DOWNTO 0); -- sfix16
         D_out                           :   OUT   std_logic_vector(26 DOWNTO 0)  -- sfix27_En10
         );

END fir_dec_8;


----------------------------------------------------------------
--Module Architecture: fir_dec_8
----------------------------------------------------------------
ARCHITECTURE rtl OF fir_dec_8 IS
  -- Local Functions
  -- Type Definitions
  TYPE delay_pipeline_type IS ARRAY (NATURAL range <>) OF signed(26 DOWNTO 0); -- sfix27_En10
  -- Constants
  CONSTANT coeff1                         : signed(15 DOWNTO 0) := to_signed(2, 16); -- sfix16_En10
  CONSTANT coeff2                         : signed(15 DOWNTO 0) := to_signed(3, 16); -- sfix16_En10
  CONSTANT coeff3                         : signed(15 DOWNTO 0) := to_signed(2, 16); -- sfix16_En10
  CONSTANT coeff4                         : signed(15 DOWNTO 0) := to_signed(0, 16); -- sfix16_En10
  CONSTANT coeff5                         : signed(15 DOWNTO 0) := to_signed(-3, 16); -- sfix16_En10
  CONSTANT coeff6                         : signed(15 DOWNTO 0) := to_signed(-5, 16); -- sfix16_En10
  CONSTANT coeff7                         : signed(15 DOWNTO 0) := to_signed(-5, 16); -- sfix16_En10
  CONSTANT coeff8                         : signed(15 DOWNTO 0) := to_signed(-2, 16); -- sfix16_En10
  CONSTANT coeff9                         : signed(15 DOWNTO 0) := to_signed(3, 16); -- sfix16_En10
  CONSTANT coeff10                        : signed(15 DOWNTO 0) := to_signed(7, 16); -- sfix16_En10
  CONSTANT coeff11                        : signed(15 DOWNTO 0) := to_signed(9, 16); -- sfix16_En10
  CONSTANT coeff12                        : signed(15 DOWNTO 0) := to_signed(6, 16); -- sfix16_En10
  CONSTANT coeff13                        : signed(15 DOWNTO 0) := to_signed(-1, 16); -- sfix16_En10
  CONSTANT coeff14                        : signed(15 DOWNTO 0) := to_signed(-9, 16); -- sfix16_En10
  CONSTANT coeff15                        : signed(15 DOWNTO 0) := to_signed(-14, 16); -- sfix16_En10
  CONSTANT coeff16                        : signed(15 DOWNTO 0) := to_signed(-13, 16); -- sfix16_En10
  CONSTANT coeff17                        : signed(15 DOWNTO 0) := to_signed(-5, 16); -- sfix16_En10
  CONSTANT coeff18                        : signed(15 DOWNTO 0) := to_signed(8, 16); -- sfix16_En10
  CONSTANT coeff19                        : signed(15 DOWNTO 0) := to_signed(20, 16); -- sfix16_En10
  CONSTANT coeff20                        : signed(15 DOWNTO 0) := to_signed(25, 16); -- sfix16_En10
  CONSTANT coeff21                        : signed(15 DOWNTO 0) := to_signed(18, 16); -- sfix16_En10
  CONSTANT coeff22                        : signed(15 DOWNTO 0) := to_signed(-1, 16); -- sfix16_En10
  CONSTANT coeff23                        : signed(15 DOWNTO 0) := to_signed(-25, 16); -- sfix16_En10
  CONSTANT coeff24                        : signed(15 DOWNTO 0) := to_signed(-43, 16); -- sfix16_En10
  CONSTANT coeff25                        : signed(15 DOWNTO 0) := to_signed(-44, 16); -- sfix16_En10
  CONSTANT coeff26                        : signed(15 DOWNTO 0) := to_signed(-20, 16); -- sfix16_En10
  CONSTANT coeff27                        : signed(15 DOWNTO 0) := to_signed(28, 16); -- sfix16_En10
  CONSTANT coeff28                        : signed(15 DOWNTO 0) := to_signed(94, 16); -- sfix16_En10
  CONSTANT coeff29                        : signed(15 DOWNTO 0) := to_signed(159, 16); -- sfix16_En10
  CONSTANT coeff30                        : signed(15 DOWNTO 0) := to_signed(208, 16); -- sfix16_En10
  CONSTANT coeff31                        : signed(15 DOWNTO 0) := to_signed(226, 16); -- sfix16_En10
  CONSTANT coeff32                        : signed(15 DOWNTO 0) := to_signed(208, 16); -- sfix16_En10
  CONSTANT coeff33                        : signed(15 DOWNTO 0) := to_signed(159, 16); -- sfix16_En10
  CONSTANT coeff34                        : signed(15 DOWNTO 0) := to_signed(94, 16); -- sfix16_En10
  CONSTANT coeff35                        : signed(15 DOWNTO 0) := to_signed(28, 16); -- sfix16_En10
  CONSTANT coeff36                        : signed(15 DOWNTO 0) := to_signed(-20, 16); -- sfix16_En10
  CONSTANT coeff37                        : signed(15 DOWNTO 0) := to_signed(-44, 16); -- sfix16_En10
  CONSTANT coeff38                        : signed(15 DOWNTO 0) := to_signed(-43, 16); -- sfix16_En10
  CONSTANT coeff39                        : signed(15 DOWNTO 0) := to_signed(-25, 16); -- sfix16_En10
  CONSTANT coeff40                        : signed(15 DOWNTO 0) := to_signed(-1, 16); -- sfix16_En10
  CONSTANT coeff41                        : signed(15 DOWNTO 0) := to_signed(18, 16); -- sfix16_En10
  CONSTANT coeff42                        : signed(15 DOWNTO 0) := to_signed(25, 16); -- sfix16_En10
  CONSTANT coeff43                        : signed(15 DOWNTO 0) := to_signed(20, 16); -- sfix16_En10
  CONSTANT coeff44                        : signed(15 DOWNTO 0) := to_signed(8, 16); -- sfix16_En10
  CONSTANT coeff45                        : signed(15 DOWNTO 0) := to_signed(-5, 16); -- sfix16_En10
  CONSTANT coeff46                        : signed(15 DOWNTO 0) := to_signed(-13, 16); -- sfix16_En10
  CONSTANT coeff47                        : signed(15 DOWNTO 0) := to_signed(-14, 16); -- sfix16_En10
  CONSTANT coeff48                        : signed(15 DOWNTO 0) := to_signed(-9, 16); -- sfix16_En10
  CONSTANT coeff49                        : signed(15 DOWNTO 0) := to_signed(-1, 16); -- sfix16_En10
  CONSTANT coeff50                        : signed(15 DOWNTO 0) := to_signed(6, 16); -- sfix16_En10
  CONSTANT coeff51                        : signed(15 DOWNTO 0) := to_signed(9, 16); -- sfix16_En10
  CONSTANT coeff52                        : signed(15 DOWNTO 0) := to_signed(7, 16); -- sfix16_En10
  CONSTANT coeff53                        : signed(15 DOWNTO 0) := to_signed(3, 16); -- sfix16_En10
  CONSTANT coeff54                        : signed(15 DOWNTO 0) := to_signed(-2, 16); -- sfix16_En10
  CONSTANT coeff55                        : signed(15 DOWNTO 0) := to_signed(-5, 16); -- sfix16_En10
  CONSTANT coeff56                        : signed(15 DOWNTO 0) := to_signed(-5, 16); -- sfix16_En10
  CONSTANT coeff57                        : signed(15 DOWNTO 0) := to_signed(-3, 16); -- sfix16_En10
  CONSTANT coeff58                        : signed(15 DOWNTO 0) := to_signed(0, 16); -- sfix16_En10
  CONSTANT coeff59                        : signed(15 DOWNTO 0) := to_signed(2, 16); -- sfix16_En10
  CONSTANT coeff60                        : signed(15 DOWNTO 0) := to_signed(3, 16); -- sfix16_En10
  CONSTANT coeff61                        : signed(15 DOWNTO 0) := to_signed(2, 16); -- sfix16_En10

  -- Signals
  SIGNAL inputreg                         : signed(15 DOWNTO 0); -- sfix16
  SIGNAL delay_pipeline                   : delay_pipeline_type(0 TO 59); -- sfix27_En10
  SIGNAL sumvector                        : delay_pipeline_type(0 TO 59); -- sfix27_En10
  SIGNAL product31                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp                         : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product32                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_1                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product33                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_2                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product34                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_3                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product35                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_4                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product36                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_5                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product37                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_6                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product38                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_7                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product39                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_8                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product41                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_9                       : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product42                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_10                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product43                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_11                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product44                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL product46                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_12                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product47                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_13                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product48                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_14                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product49                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mulpwr2_temp                     : signed(16 DOWNTO 0); -- sfix17
  SIGNAL product50                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_15                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product51                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_16                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product52                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_17                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product54                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mulpwr2_temp_1                   : signed(16 DOWNTO 0); -- sfix17
  SIGNAL product56                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_18                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product57                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_19                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product60                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL mul_temp_20                      : signed(31 DOWNTO 0); -- sfix32_En10
  SIGNAL product61                        : signed(23 DOWNTO 0); -- sfix24_En10
  SIGNAL finalsum                         : signed(26 DOWNTO 0); -- sfix27_En10
  SIGNAL add_temp                         : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_1                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_2                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_3                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_4                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_5                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_6                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_7                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_8                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_9                       : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_10                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_11                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_12                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_13                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_14                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_15                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_16                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_17                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_18                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_19                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_20                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_21                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_22                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_23                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_24                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_25                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_26                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_27                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_28                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_29                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_30                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_31                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_32                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_33                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_34                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_35                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_36                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_37                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_38                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_39                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_40                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_41                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_42                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_43                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_44                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_45                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_46                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_47                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_48                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_49                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_50                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_51                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_52                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_53                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_54                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_55                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_56                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL add_temp_57                      : signed(27 DOWNTO 0); -- sfix28_En10
  SIGNAL output_typeconvert               : signed(26 DOWNTO 0); -- sfix27_En10
  SIGNAL output_register                  : signed(26 DOWNTO 0); -- sfix27_En10


BEGIN

  -- Block Statements
  input_reg_process : PROCESS (clk_i, nrst)
  BEGIN
    IF nrst = '0' THEN
      inputreg <= (OTHERS => '0');
    ELSIF clk_i'event AND clk_i = '1' THEN
      IF clk_enable = '1' THEN
        inputreg <= signed(D_in);
      END IF;
    END IF; 
  END PROCESS input_reg_process;

  Delay_Pipeline_process : PROCESS (clk_i, nrst)
  BEGIN
    IF nrst = '0' THEN
      delay_pipeline <= (OTHERS => (OTHERS => '0'));
    ELSIF clk_i'event AND clk_i = '1' THEN
      IF clk_enable = '1' THEN
        delay_pipeline(0 TO 59) <= sumvector(0 TO 59);
      END IF;
    END IF; 
  END PROCESS Delay_Pipeline_process;

  mul_temp <= inputreg * coeff31;
  product31 <= mul_temp(23 DOWNTO 0);

  mul_temp_1 <= inputreg * coeff32;
  product32 <= mul_temp_1(23 DOWNTO 0);

  mul_temp_2 <= inputreg * coeff33;
  product33 <= mul_temp_2(23 DOWNTO 0);

  mul_temp_3 <= inputreg * coeff34;
  product34 <= mul_temp_3(23 DOWNTO 0);

  mul_temp_4 <= inputreg * coeff35;
  product35 <= mul_temp_4(23 DOWNTO 0);

  mul_temp_5 <= inputreg * coeff36;
  product36 <= mul_temp_5(23 DOWNTO 0);

  mul_temp_6 <= inputreg * coeff37;
  product37 <= mul_temp_6(23 DOWNTO 0);

  mul_temp_7 <= inputreg * coeff38;
  product38 <= mul_temp_7(23 DOWNTO 0);

  mul_temp_8 <= inputreg * coeff39;
  product39 <= mul_temp_8(23 DOWNTO 0);

  mul_temp_9 <= inputreg * coeff41;
  product41 <= mul_temp_9(23 DOWNTO 0);

  mul_temp_10 <= inputreg * coeff42;
  product42 <= mul_temp_10(23 DOWNTO 0);

  mul_temp_11 <= inputreg * coeff43;
  product43 <= mul_temp_11(23 DOWNTO 0);

  product44 <= resize(inputreg(15 DOWNTO 0) & '0' & '0' & '0', 24);

  mul_temp_12 <= inputreg * coeff46;
  product46 <= mul_temp_12(23 DOWNTO 0);

  mul_temp_13 <= inputreg * coeff47;
  product47 <= mul_temp_13(23 DOWNTO 0);

  mul_temp_14 <= inputreg * coeff48;
  product48 <= mul_temp_14(23 DOWNTO 0);

  mulpwr2_temp <= ('0' & inputreg) WHEN inputreg = "1000000000000000"
      ELSE -resize(inputreg,17);

  product49 <= resize(mulpwr2_temp, 24);

  mul_temp_15 <= inputreg * coeff50;
  product50 <= mul_temp_15(23 DOWNTO 0);

  mul_temp_16 <= inputreg * coeff51;
  product51 <= mul_temp_16(23 DOWNTO 0);

  mul_temp_17 <= inputreg * coeff52;
  product52 <= mul_temp_17(23 DOWNTO 0);

  mulpwr2_temp_1 <= ('0' & inputreg) WHEN inputreg = "1000000000000000"
      ELSE -resize(inputreg,17);

  product54 <= resize(mulpwr2_temp_1(16 DOWNTO 0) & '0', 24);

  mul_temp_18 <= inputreg * coeff56;
  product56 <= mul_temp_18(23 DOWNTO 0);

  mul_temp_19 <= inputreg * coeff57;
  product57 <= mul_temp_19(23 DOWNTO 0);

  mul_temp_20 <= inputreg * coeff60;
  product60 <= mul_temp_20(23 DOWNTO 0);

  product61 <= resize(inputreg(15 DOWNTO 0) & '0', 24);

  add_temp <= resize(product61, 28) + resize(delay_pipeline(0), 28);
  finalsum <= add_temp(26 DOWNTO 0);

  add_temp_1 <= resize(product60, 28) + resize(delay_pipeline(1), 28);
  sumvector(0) <= add_temp_1(26 DOWNTO 0);

  add_temp_2 <= resize(product61, 28) + resize(delay_pipeline(2), 28);
  sumvector(1) <= add_temp_2(26 DOWNTO 0);

  sumvector(2) <= delay_pipeline(3);

  add_temp_3 <= resize(product57, 28) + resize(delay_pipeline(4), 28);
  sumvector(3) <= add_temp_3(26 DOWNTO 0);

  add_temp_4 <= resize(product56, 28) + resize(delay_pipeline(5), 28);
  sumvector(4) <= add_temp_4(26 DOWNTO 0);

  add_temp_5 <= resize(product56, 28) + resize(delay_pipeline(6), 28);
  sumvector(5) <= add_temp_5(26 DOWNTO 0);

  add_temp_6 <= resize(product54, 28) + resize(delay_pipeline(7), 28);
  sumvector(6) <= add_temp_6(26 DOWNTO 0);

  add_temp_7 <= resize(product60, 28) + resize(delay_pipeline(8), 28);
  sumvector(7) <= add_temp_7(26 DOWNTO 0);

  add_temp_8 <= resize(product52, 28) + resize(delay_pipeline(9), 28);
  sumvector(8) <= add_temp_8(26 DOWNTO 0);

  add_temp_9 <= resize(product51, 28) + resize(delay_pipeline(10), 28);
  sumvector(9) <= add_temp_9(26 DOWNTO 0);

  add_temp_10 <= resize(product50, 28) + resize(delay_pipeline(11), 28);
  sumvector(10) <= add_temp_10(26 DOWNTO 0);

  add_temp_11 <= resize(product49, 28) + resize(delay_pipeline(12), 28);
  sumvector(11) <= add_temp_11(26 DOWNTO 0);

  add_temp_12 <= resize(product48, 28) + resize(delay_pipeline(13), 28);
  sumvector(12) <= add_temp_12(26 DOWNTO 0);

  add_temp_13 <= resize(product47, 28) + resize(delay_pipeline(14), 28);
  sumvector(13) <= add_temp_13(26 DOWNTO 0);

  add_temp_14 <= resize(product46, 28) + resize(delay_pipeline(15), 28);
  sumvector(14) <= add_temp_14(26 DOWNTO 0);

  add_temp_15 <= resize(product56, 28) + resize(delay_pipeline(16), 28);
  sumvector(15) <= add_temp_15(26 DOWNTO 0);

  add_temp_16 <= resize(product44, 28) + resize(delay_pipeline(17), 28);
  sumvector(16) <= add_temp_16(26 DOWNTO 0);

  add_temp_17 <= resize(product43, 28) + resize(delay_pipeline(18), 28);
  sumvector(17) <= add_temp_17(26 DOWNTO 0);

  add_temp_18 <= resize(product42, 28) + resize(delay_pipeline(19), 28);
  sumvector(18) <= add_temp_18(26 DOWNTO 0);

  add_temp_19 <= resize(product41, 28) + resize(delay_pipeline(20), 28);
  sumvector(19) <= add_temp_19(26 DOWNTO 0);

  add_temp_20 <= resize(product49, 28) + resize(delay_pipeline(21), 28);
  sumvector(20) <= add_temp_20(26 DOWNTO 0);

  add_temp_21 <= resize(product39, 28) + resize(delay_pipeline(22), 28);
  sumvector(21) <= add_temp_21(26 DOWNTO 0);

  add_temp_22 <= resize(product38, 28) + resize(delay_pipeline(23), 28);
  sumvector(22) <= add_temp_22(26 DOWNTO 0);

  add_temp_23 <= resize(product37, 28) + resize(delay_pipeline(24), 28);
  sumvector(23) <= add_temp_23(26 DOWNTO 0);

  add_temp_24 <= resize(product36, 28) + resize(delay_pipeline(25), 28);
  sumvector(24) <= add_temp_24(26 DOWNTO 0);

  add_temp_25 <= resize(product35, 28) + resize(delay_pipeline(26), 28);
  sumvector(25) <= add_temp_25(26 DOWNTO 0);

  add_temp_26 <= resize(product34, 28) + resize(delay_pipeline(27), 28);
  sumvector(26) <= add_temp_26(26 DOWNTO 0);

  add_temp_27 <= resize(product33, 28) + resize(delay_pipeline(28), 28);
  sumvector(27) <= add_temp_27(26 DOWNTO 0);

  add_temp_28 <= resize(product32, 28) + resize(delay_pipeline(29), 28);
  sumvector(28) <= add_temp_28(26 DOWNTO 0);

  add_temp_29 <= resize(product31, 28) + resize(delay_pipeline(30), 28);
  sumvector(29) <= add_temp_29(26 DOWNTO 0);

  add_temp_30 <= resize(product32, 28) + resize(delay_pipeline(31), 28);
  sumvector(30) <= add_temp_30(26 DOWNTO 0);

  add_temp_31 <= resize(product33, 28) + resize(delay_pipeline(32), 28);
  sumvector(31) <= add_temp_31(26 DOWNTO 0);

  add_temp_32 <= resize(product34, 28) + resize(delay_pipeline(33), 28);
  sumvector(32) <= add_temp_32(26 DOWNTO 0);

  add_temp_33 <= resize(product35, 28) + resize(delay_pipeline(34), 28);
  sumvector(33) <= add_temp_33(26 DOWNTO 0);

  add_temp_34 <= resize(product36, 28) + resize(delay_pipeline(35), 28);
  sumvector(34) <= add_temp_34(26 DOWNTO 0);

  add_temp_35 <= resize(product37, 28) + resize(delay_pipeline(36), 28);
  sumvector(35) <= add_temp_35(26 DOWNTO 0);

  add_temp_36 <= resize(product38, 28) + resize(delay_pipeline(37), 28);
  sumvector(36) <= add_temp_36(26 DOWNTO 0);

  add_temp_37 <= resize(product39, 28) + resize(delay_pipeline(38), 28);
  sumvector(37) <= add_temp_37(26 DOWNTO 0);

  add_temp_38 <= resize(product49, 28) + resize(delay_pipeline(39), 28);
  sumvector(38) <= add_temp_38(26 DOWNTO 0);

  add_temp_39 <= resize(product41, 28) + resize(delay_pipeline(40), 28);
  sumvector(39) <= add_temp_39(26 DOWNTO 0);

  add_temp_40 <= resize(product42, 28) + resize(delay_pipeline(41), 28);
  sumvector(40) <= add_temp_40(26 DOWNTO 0);

  add_temp_41 <= resize(product43, 28) + resize(delay_pipeline(42), 28);
  sumvector(41) <= add_temp_41(26 DOWNTO 0);

  add_temp_42 <= resize(product44, 28) + resize(delay_pipeline(43), 28);
  sumvector(42) <= add_temp_42(26 DOWNTO 0);

  add_temp_43 <= resize(product56, 28) + resize(delay_pipeline(44), 28);
  sumvector(43) <= add_temp_43(26 DOWNTO 0);

  add_temp_44 <= resize(product46, 28) + resize(delay_pipeline(45), 28);
  sumvector(44) <= add_temp_44(26 DOWNTO 0);

  add_temp_45 <= resize(product47, 28) + resize(delay_pipeline(46), 28);
  sumvector(45) <= add_temp_45(26 DOWNTO 0);

  add_temp_46 <= resize(product48, 28) + resize(delay_pipeline(47), 28);
  sumvector(46) <= add_temp_46(26 DOWNTO 0);

  add_temp_47 <= resize(product49, 28) + resize(delay_pipeline(48), 28);
  sumvector(47) <= add_temp_47(26 DOWNTO 0);

  add_temp_48 <= resize(product50, 28) + resize(delay_pipeline(49), 28);
  sumvector(48) <= add_temp_48(26 DOWNTO 0);

  add_temp_49 <= resize(product51, 28) + resize(delay_pipeline(50), 28);
  sumvector(49) <= add_temp_49(26 DOWNTO 0);

  add_temp_50 <= resize(product52, 28) + resize(delay_pipeline(51), 28);
  sumvector(50) <= add_temp_50(26 DOWNTO 0);

  add_temp_51 <= resize(product60, 28) + resize(delay_pipeline(52), 28);
  sumvector(51) <= add_temp_51(26 DOWNTO 0);

  add_temp_52 <= resize(product54, 28) + resize(delay_pipeline(53), 28);
  sumvector(52) <= add_temp_52(26 DOWNTO 0);

  add_temp_53 <= resize(product56, 28) + resize(delay_pipeline(54), 28);
  sumvector(53) <= add_temp_53(26 DOWNTO 0);

  add_temp_54 <= resize(product56, 28) + resize(delay_pipeline(55), 28);
  sumvector(54) <= add_temp_54(26 DOWNTO 0);

  add_temp_55 <= resize(product57, 28) + resize(delay_pipeline(56), 28);
  sumvector(55) <= add_temp_55(26 DOWNTO 0);

  sumvector(56) <= delay_pipeline(57);

  add_temp_56 <= resize(product61, 28) + resize(delay_pipeline(58), 28);
  sumvector(57) <= add_temp_56(26 DOWNTO 0);

  add_temp_57 <= resize(product60, 28) + resize(delay_pipeline(59), 28);
  sumvector(58) <= add_temp_57(26 DOWNTO 0);

  sumvector(59) <= resize(product61, 27);

  output_typeconvert <= finalsum;

  Output_Register_process : PROCESS (clk_i, nrst)
  BEGIN
    IF nrst = '0' THEN
      output_register <= (OTHERS => '0');
    ELSIF clk_i'event AND clk_i = '1' THEN
      IF clk_enable = '1' THEN
        output_register <= output_typeconvert;
      END IF;
    END IF; 
  END PROCESS Output_Register_process;

  -- Assignment Statements
  D_out <= std_logic_vector(output_register);
END rtl;
